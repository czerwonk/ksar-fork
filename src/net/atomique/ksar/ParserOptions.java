/*
 * ParserOptions.java
 *
 * Created on 29 juillet 2008, 21:19
 */

package net.atomique.ksar;

/**
 *
 * @author  alex
 */
public class ParserOptions extends javax.swing.JDialog {
    
    public static final long serialVersionUID = 501L;
    
    /** Creates new form ParserOptions */
    public ParserOptions(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        load_value();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        resetButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel2.setText("always refresh until datapoint grow up to");
        jPanel4.add(jLabel2);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(100, 1, 4997, 1));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });
        jPanel4.add(jSpinner2);

        jPanel1.add(jPanel4);

        jLabel6.setText("refresh every ");
        jPanel7.add(jLabel6);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(10, 1, 1000, 1));
        jPanel7.add(jSpinner1);

        jLabel1.setText("when datapoint is under");
        jPanel7.add(jLabel1);

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(500, 2, 4998, 1));
        jSpinner5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner5StateChanged(evt);
            }
        });
        jPanel7.add(jSpinner5);

        jPanel1.add(jPanel7);

        jLabel7.setText("refresh every ");
        jPanel6.add(jLabel7);

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(100, 1, 1000, 1));
        jPanel6.add(jSpinner6);

        jLabel5.setText("when datapoint is under");
        jPanel6.add(jLabel5);

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(1000, 3, 4999, 1));
        jSpinner4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner4StateChanged(evt);
            }
        });
        jPanel6.add(jSpinner4);

        jPanel1.add(jPanel6);

        jLabel4.setText("don't refresh graph if datapoint is over");
        jPanel5.add(jLabel4);

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5000), Integer.valueOf(4), null, Integer.valueOf(1)));
        jSpinner3.setMinimumSize(new java.awt.Dimension(83, 24));
        jSpinner3.setOpaque(false);
        jSpinner3.setPreferredSize(new java.awt.Dimension(83, 24));
        jSpinner3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner3StateChanged(evt);
            }
        });
        jPanel5.add(jSpinner3);

        jPanel1.add(jPanel5);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        resetButton.setText("Reset to defaults");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel2.add(resetButton);

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel2.add(okButton);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jPanel2.add(closeButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        save_value();
        this.dispose();
}//GEN-LAST:event_okButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        load_value();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        Integer tmp = (Integer)jSpinner2.getValue();
        Integer nexttmp = (Integer)jSpinner5.getValue();
        if ( tmp.intValue() >= nexttmp.intValue() ) {
            jSpinner5.setValue(new Integer(tmp.intValue()+1));
        }
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jSpinner5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner5StateChanged
        Integer tmp = (Integer)jSpinner5.getValue();
        Integer prevtmp = (Integer)jSpinner2.getValue();
        Integer nexttmp = (Integer)jSpinner4.getValue();
        if ( tmp.intValue() >= nexttmp.intValue() ) {
            jSpinner4.setValue(new Integer(tmp.intValue()+1));
        }
        if ( tmp.intValue() <= prevtmp.intValue() ) {
            jSpinner2.setValue(new Integer(tmp.intValue()-1));
        }
    }//GEN-LAST:event_jSpinner5StateChanged

    private void jSpinner4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner4StateChanged
        Integer tmp = (Integer)jSpinner4.getValue();
        Integer prevtmp = (Integer)jSpinner5.getValue();
        Integer nexttmp = (Integer)jSpinner3.getValue();
        if ( tmp.intValue() >= nexttmp.intValue() ) {
            jSpinner3.setValue(new Integer(tmp.intValue()+1));
        }
        if ( tmp.intValue() <= prevtmp.intValue() ) {
            jSpinner5.setValue(new Integer(tmp.intValue()-1));
        }
    }//GEN-LAST:event_jSpinner4StateChanged

    private void jSpinner3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner3StateChanged
        Integer tmp = (Integer)jSpinner3.getValue();
        Integer prevtmp = (Integer)jSpinner4.getValue();
        if ( tmp.intValue() <= prevtmp.intValue() ) {
            jSpinner4.setValue(new Integer(tmp.intValue()-1));
        }
    }//GEN-LAST:event_jSpinner3StateChanged
    
    private void save_value() {
        kSarConfig.alwaysrefresh = ((Integer)jSpinner2.getValue()).intValue();
        kSarConfig.somerefresh = ((Integer)jSpinner5.getValue()).intValue();
        kSarConfig.lessrefresh = ((Integer)jSpinner4.getValue()).intValue();
        kSarConfig.norefresh = ((Integer)jSpinner3.getValue()).intValue();
        kSarConfig.somerefresh_time = ((Integer)jSpinner1.getValue()).intValue();
        kSarConfig.lessrefresh_time = ((Integer)jSpinner6.getValue()).intValue();
        kSarConfig.writeDefault();
    }
    
    private void load_value() {
        jSpinner2.setValue(new Integer(kSarConfig.alwaysrefresh));
        jSpinner5.setValue(new Integer(kSarConfig.somerefresh));
        jSpinner4.setValue(new Integer(kSarConfig.lessrefresh));
        jSpinner3.setValue(new Integer(kSarConfig.norefresh));
        jSpinner1.setValue(new Integer(kSarConfig.somerefresh_time));
        jSpinner6.setValue(new Integer(kSarConfig.lessrefresh_time));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ParserOptions dialog = new ParserOptions(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JButton okButton;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
    
}
