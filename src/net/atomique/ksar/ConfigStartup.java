/*
 * ConfigStartup.java
 *
 * Created on 7 juillet 2008, 22:58
 */
package net.atomique.ksar;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JPanel;

/**
 *
 * @author  alex
 */
public class ConfigStartup extends javax.swing.JFrame {

    public static final long serialVersionUID = 501L;
    
    /** Creates new form ConfigStartup */
    public ConfigStartup(kSarDesktop hisdesktop) {
        mydesktop = hisdesktop;
        initComponents();
        init_winlist();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Configure shortcut");

        jPanel1.setMinimumSize(new java.awt.Dimension(300, 200));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(jPanel3);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 1, 1));

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Tile window at startup");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBox1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
       kSarConfig.tile_at_startup=jCheckBox1.isSelected();
       kSarConfig.writeDefault();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void delete_shortcut(String temp) {
        boolean hasdeleted = false;
        String keytoremove = null;
        for (Iterator<String> it = kSarConfig.shortcut_window_list.keySet().iterator(); it.hasNext();) {
            String key = it.next();
            String value = kSarConfig.shortcut_window_list.get(key);
            if (temp.equals(value)) {
                keytoremove = key;
                hasdeleted = true;
            }
        }
        if (hasdeleted) {
            kSarConfig.shortcut_window_list.remove(keytoremove);
            kSarConfig.writeDefault();
            mydesktop.delete_shortcut(temp);
            jPanel3.removeAll();
            jPanel3.repaint();
            init_winlist();
        }
    }

    private void change_atstartup(boolean sel, String shortcut) {
        if (sel) {
            kSarConfig.startup_windows_list.add(shortcut);
        } else {
            kSarConfig.startup_windows_list.remove(shortcut);
        }
        kSarConfig.writeDefault();
    }

    private void init_winlist() {
        for (Iterator<String> it = kSarConfig.shortcut_window_list.keySet().iterator(); it.hasNext();) {
            String key = it.next();
            String value = kSarConfig.shortcut_window_list.get(key);
            JPanel tempwin = new JPanel();
            tempwin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            tempwin.setMaximumSize(new java.awt.Dimension(32767, 41));
            tempwin.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
            JButton Delete = new JButton();
            Delete.setText("Delete");
            Delete.setActionCommand(value);
            Delete.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent h) {
                    delete_shortcut(h.getActionCommand());
                }
            });
            tempwin.add(Delete);
            atstartup = new JCheckBox();
            atstartup.setText(value);
            atstartup.setActionCommand(value);
            atstartup.setSelected(false);
            if ( kSarConfig.startup_windows_list !=null ) {
                if ( kSarConfig.startup_windows_list.contains(value) ) {
                    atstartup.setSelected(true);
                } 
            }
            atstartup.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent h) {
                    change_atstartup(atstartup.isSelected(), h.getActionCommand());
                }
            });
            tempwin.add(atstartup);
            jPanel3.add(tempwin);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    kSarDesktop mydesktop;
    JCheckBox atstartup;
}
